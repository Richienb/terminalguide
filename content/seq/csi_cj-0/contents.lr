title: Erase Display Below
---
implnotes:

#### impl ####
impl: xterm
----
level: full
----
since: 
----
body: 
#### impl ####
impl: konsole
----
level: partial
----
since: 
----
body:

* Does not unset the pending wrap state.
* Does not erase split multi cell characters.
#### impl ####
impl: urxvt
----
level: partial
----
since: 
----
body:

* Does not erase split multi cell characters.
* Does not unset pending wrap state.
---
seq:

#### csi ####
#### numeric_fixed ####
val: 0
#### final ####
name: J
---
body:

Erase the screen from the current cursor position down. The side left of current cursor position on the line of the current cursor position is not erased.

In it's basic variant it will also erase protected cells. When called as {{seq_link('csi_cj__p')}} it will not eraseprotected cells.

The [current scroll region](/scrolling-region) is ignored by this command.

If the cursor is in the top left corner of the screen (ignoring the current scroll region) then this invokes {{seq_link('csi_cj-2')}}.

Erase the right side of the line where the cursor is currently placed starting from (including) the current cursor position, by replacing all cells with spaces.

All lines below the current cursor position are erased, by replacing all cell contents with space. These lines are reset to normal size(i.e. not double height or width).

If the erase splits a multi cell character that character is erased by replacing it with spaces.

All erased space is colored according to the current [SGR state](/attr).

{{snip('unset-pending-wrap')}}

Resets the wrap heuristics so the lines erased are not considered to be wrapped.


Does not change the cursor position.
