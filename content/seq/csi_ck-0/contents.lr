title: Erase Line Right
---
implnotes:

#### impl ####
impl: xterm
----
level: full
----
since: 
----
body: 
#### impl ####
impl: konsole
----
level: partial
----
since: 
----
body:

{{miss}} Does not erase split multi cell characters.
{{miss}} When the pending wrap state is set, konsole does not clear anything nor reset the pending wrap state. So this is effectively {{seq_link('csi_ck-3')}}.
#### impl ####
impl: urxvt
----
level: partial
----
since: 
----
body: {{miss}} Does not erase split multi cell characters.
#### impl ####
impl: vte
----
level: partial
----
since: 
----
body:

{{miss}} {{snip('split-keep-bg')}}


{{miss}} When the pending wrap state is set, vte does not clear anything nor reset the pending wrap state. So this is effectively {{seq_link('csi_ck-3')}}.
{{info}} See https://bugzilla.gnome.org/show_bug.cgi?id=740789 for background.
---
seq:

#### csi ####
#### numeric_fixed ####
val: 0
#### final ####
name: K
---
body:

Erase the right side of the line where the cursor is currently placed starting from (including) the current cursor position, by replacing all cells with spaces.

In it's basic variant it will also erase protected cells. When called as {{seq_link('csi_ck__p')}} it will not erase protected cells.

If the erase splits a multi cell character that character is erased by replacing it with spaces.
<!--
echo -ne "\033[2J\033[1;1H\033[42mあ23ぬ\033[1;2H\033[0m\033[0K\n"
-->

All erased space is colored according to the current [SGR state](/attr).

Does not change the cursor position.

{{snip('unset-pending-wrap')}}

